{"version":3,"sources":["redux/contacts/contacts-actions.js","components/Container/Container.js","components/Container/Container.module.css","components/App/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","Container","children","className","styles","container","module","exports","HomePage","lazy","NotFoundView","App","fallback","path","component","actions","items","createReducer","_","payload","state","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","todosReducer","devTools","process","render","StrictMode","document","getElementById"],"mappings":"+IAAA,WAGMA,EAAuBC,YAAa,iCACpCC,EAAuBD,YAAa,iCACpCE,EAAqBF,YAAa,+BAElCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAAa,iCACpCO,EAAuBP,YAAa,iCACpCQ,EAAqBR,YAAa,+BAElCS,EAAeT,YAAa,yBAEnB,KACXD,uBACAE,uBACAC,qBACAC,oBACAC,oBACAC,kBACAC,uBACAC,uBACAC,qBACAC,iB,8FCzBW,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,M,mBCF5CI,EAAOC,QAAU,CAAC,UAAY,+B,uJCKxBC,EAAWC,gBAAK,kBACpB,sDAEIC,EAAeD,gBAAK,kBACxB,gCAkBaE,EAfH,kBACV,8BACE,cAACV,EAAA,EAAD,UACK,cAAC,WAAD,CAAUW,SAAU,sIAApB,SACL,eAAC,IAAD,WACM,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWN,IAC3B,cAAC,IAAD,UACE,cAACE,EAAD,gB,6CChBJpB,EASayB,IATbzB,qBACJE,EAQiBuB,IARjBvB,qBACAC,EAOiBsB,IAPjBtB,mBACAC,EAMiBqB,IANjBrB,kBACAC,EAKiBoB,IALjBpB,kBACAC,EAIiBmB,IAJjBnB,gBACAC,EAGiBkB,IAHjBlB,qBACAC,EAEiBiB,IAFjBjB,qBACAC,EACiBgB,IADjBhB,mBACAC,EAAiBe,IAAjBf,aAEEgB,EAAQC,YAAc,IAAD,mBACtBzB,GAAsB,SAAC0B,EAAD,YAAIC,WADJ,cAEtBxB,GAAmB,SAACyB,EAAD,YAAQD,SAAR,mBAA+BC,OAF5B,cAGtBtB,GAAsB,SAACsB,EAAD,OAAQD,EAAR,EAAQA,QAAR,OACvBC,EAAMC,QAAO,qBAAEC,KAAaH,QAJL,IAQrBE,EAAOJ,YAAc,GAAD,eACrBjB,GACD,SAACkB,EAAD,YAAIC,YAGFI,EAAUN,aAAc,GAAD,mBACxBvB,GAAoB,kBAAM,KADF,cAExBC,GAAoB,kBAAM,KAFF,cAGxBC,GAAkB,kBAAM,KAHA,cAIxBC,GAAuB,kBAAM,KAJL,cAKxBC,GAAuB,kBAAM,KALL,cAMxBC,GAAqB,kBAAM,KANH,cAOxBT,GAAuB,kBAAM,KAPL,cAQxBE,GAAuB,kBAAM,KARL,cASxBC,GAAqB,kBAAM,KATH,IAYvB+B,EAAQP,YAAc,KAAM,IAEnBQ,cAAiB,CAC5BT,QACAK,SACAE,UACAC,U,yBChCEE,EAAU,sBACTC,YAAqB,CACxBC,kBAAkB,CAClBC,eAAe,CACXC,IACAC,IACAC,IACAC,IACAC,IACAC,SATQ,CAYZC,MAcWC,EAXDC,YAAe,CACzBC,QAAQ,CACJC,SAAUC,GAEdf,aACAgB,UAAUC,I,QCzBdC,iBACE,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUR,MAAQA,EAAlB,SAEC,cAAC,IAAD,UACE,cAAC,EAAD,UAMJS,SAASC,eAAe,W","file":"static/js/main.72d21cd2.chunk.js","sourcesContent":["// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter,\n};","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import { lazy, Suspense } from 'react';\nimport './App.css';\nimport React from 'react';\nimport { Switch, Route} from 'react-router-dom';\nimport Container from '../Container';\n\nconst HomePage = lazy(() =>\n  import('../../views/HomePage' /* webpackChunkName: \"home-view\" */),\n);\nconst NotFoundView = lazy(() =>\n  import('../../views/NotFoundView'));\n\n\nconst App = () => (\n  <div>\n    <Container>\n         <Suspense fallback={<h1>ЗАГРУЖАЕМ МАРШРУТ...</h1>}>\n    <Switch>\n          <Route path=\"/\" component={HomePage}></Route>\n          <Route>\n            <NotFoundView />\n          </Route>\n      </Switch>\n      </Suspense>\n      </Container>\n  </div>\n);\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport {createReducer} from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst { fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter } = actions;\n\nconst items = createReducer([], {\n    [fetchContactsSuccess]:(_,{payload})=>payload,\n    [addContactSuccess]:(state,{payload})=>[payload,...state],\n    [deleteContactSuccess]:(state,{payload})=>\n    state.filter(({id})=>id !== payload),\n});\n    \n\nconst filter=createReducer('', {\n    [changeFilter]:\n    (_,{payload})=>payload,\n});\n \nconst loading = createReducer(false, {\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers ({\n    items,\n    filter,\n    loading,\n    error\n});\n\n","import todosReducer from './contacts/contacts-reducer';\nimport { configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\nFLUSH,\nREHYDRATE,\nPAUSE,\nPERSIST,\nPURGE,\nREGISTER, \n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\n\nconst middleware = [\n    ...getDefaultMiddleware({\n    serializableCheck:{\n    ignoredActions:[\n        FLUSH,\n        REHYDRATE,\n        PAUSE,\n        PERSIST,\n        PURGE,\n        REGISTER, \n        ],\n    }\n}), logger,\n];\n\nconst store = configureStore({\n    reducer:{\n        contacts: todosReducer,\n        },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n// const store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;","import React from 'react';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport { render } from 'react-dom';\n//import { PersistGate} from 'redux-persist/integration/react';\n\nrender(\n  <React.StrictMode>\n   <Provider store={ store}>\n   {/* <PersistGate loading=\"Загружаем\" persistor={store.persistor}> */}\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    {/* </PersistGate> */}\n    </Provider>\n    </React.StrictMode>\n ,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}